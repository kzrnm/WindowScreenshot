<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dd="urn:gong-wpf-dragdrop"
    xmlns:kz="urn:kzrnm-wpf/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:properties="clr-namespace:Kzrnm.WindowScreenshot.Properties"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:viewmodels="clr-namespace:Kzrnm.WindowScreenshot.ViewModels"
    xmlns:views="clr-namespace:Kzrnm.WindowScreenshot.Views"
    xmlns:mvvm="clr-namespace:Kzrnm.WindowScreenshot.Mvvm"
    mc:Ignorable="d">
    

    <Style TargetType="{x:Type views:ImageListView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type views:ImageListView}">
                    <Grid d:DataContext="{d:DesignInstance Type=viewmodels:ImageListViewModel}" Background="CadetBlue">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Button
                            Grid.Column="0"
                            Padding="2"
                            HorizontalAlignment="Right"
                            Command="{Binding RemoveSelectedImageCommand}"
                            Content="{x:Static properties:Resources.Delete}" />
                        <ListBox
                            Grid.Column="1"
                            dd:DragDrop.DropEventType="Bubbled"
                            dd:DragDrop.DragHandler="{Binding DragHandler}"
                            dd:DragDrop.DropHandler="{Binding DropHandler}"
                            dd:DragDrop.IsDragSource="True"
                            dd:DragDrop.IsDropTarget="True"
                            ItemsSource="{Binding ImageProvider.Images, Mode=OneWay}"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            ScrollViewer.VerticalScrollBarVisibility="Disabled"
                            SelectedIndex="{Binding ImageProvider.SelectedImageIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=views:ImageListView}}" />
                                    <Setter Property="ContextMenu">
                                        <Setter.Value>
                                            <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                                <b:Interaction.Triggers>
                                                    <b:EventTrigger EventName="Opened">
                                                        <b:CallMethodAction MethodName="UpdateCanClipboardCommand" TargetObject="{Binding}" />
                                                    </b:EventTrigger>
                                                </b:Interaction.Triggers>
                                                <MenuItem
                                                    Command="{Binding CopyToClipboardCommand}"
                                                    CommandParameter="{Binding PlacementTarget.Content, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                    Header="{x:Static properties:Resources.CopyToClipboard}" />
                                                <MenuItem Command="{Binding InsertImageFromClipboardCommand}" Header="{x:Static properties:Resources.Paste}" />
                                                <MenuItem Command="{Binding RemoveSelectedImageCommand}" Header="{x:Static properties:Resources.Delete}" />
                                            </ContextMenu>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Image Width="{Binding ImageWidth, RelativeSource={RelativeSource AncestorType=views:WindowCapturer}}" Source="{Binding ImageSource}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <b:Interaction.Triggers>
                                <b:KeyTrigger
                                    Key="Delete"
                                    ActiveOnFocus="True"
                                    FiredOn="KeyDown">
                                    <b:InvokeCommandAction Command="{Binding RemoveSelectedImageCommand}" />
                                </b:KeyTrigger>
                            </b:Interaction.Triggers>
                        </ListBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type views:ImageSettings}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type views:ImageSettings}">
                    <Grid
                        Margin="5"
                        d:DataContext="{d:DesignInstance viewmodels:ImageSettingsViewModel}"
                        IsEnabled="{Binding HasImage}">
                        <Grid.Resources>
                            
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="55" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="55" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <RadioButton
                            x:Name="ByPixel"
                            Grid.Row="0"
                            Grid.Column="0"
                            Grid.ColumnSpan="10000"
                            Content="{x:Static properties:Resources.SettingByPixel}" />
                        <TextBlock
                            Grid.Row="1"
                            Grid.Column="0"
                            Text="{x:Static properties:Resources.Width}" />
                        <TextBox
                            x:Name="PART_Width"
                            Grid.Row="1"
                            Grid.Column="1"
                            kz:TextBoxBehavior.SelectAllOnFocus="True"
                            IsEnabled="{Binding IsChecked, ElementName=ByPixel}"
                            Text="{Binding Width, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock
                            Grid.Row="1"
                            Grid.Column="2"
                            Text="{x:Static properties:Resources.px}" />
                        <TextBlock
                            Grid.Row="1"
                            Grid.Column="4"
                            Text="{x:Static properties:Resources.Height}" />
                        <TextBox
                            x:Name="PART_Height"
                            Grid.Row="1"
                            Grid.Column="5"
                            kz:TextBoxBehavior.SelectAllOnFocus="True"
                            IsEnabled="{Binding IsChecked, ElementName=ByPixel}"
                            Text="{Binding Height, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock
                            Grid.Row="1"
                            Grid.Column="6"
                            Text="{x:Static properties:Resources.px}" />

                        <RadioButton
                            x:Name="ByPercentage"
                            Grid.Row="3"
                            Grid.Column="0"
                            Grid.ColumnSpan="10000"
                            Content="{x:Static properties:Resources.SettingByPercentage}"
                            IsChecked="True" />
                        <TextBlock
                            Grid.Row="4"
                            Grid.Column="0"
                            Text="{x:Static properties:Resources.Width}" />
                        <kz:DoubleTextBox
                            x:Name="PART_WidthPercentage"
                            Grid.Row="4"
                            Grid.Column="1"
                            kz:TextBoxBehavior.SelectAllOnFocus="True"
                            DoubleText="{Binding WidthPercentage, UpdateSourceTrigger=PropertyChanged}"
                            IsEnabled="{Binding IsChecked, ElementName=ByPercentage}" />
                        <TextBlock
                            Grid.Row="4"
                            Grid.Column="2"
                            Text="%" />
                        <TextBlock
                            Grid.Row="4"
                            Grid.Column="4"
                            Text="{x:Static properties:Resources.Height}" />
                        <kz:DoubleTextBox
                            x:Name="PART_HeightPercentage"
                            Grid.Row="4"
                            Grid.Column="5"
                            kz:TextBoxBehavior.SelectAllOnFocus="True"
                            DoubleText="{Binding HeightPercentage, UpdateSourceTrigger=PropertyChanged}"
                            IsEnabled="{Binding IsChecked, ElementName=ByPercentage}" />
                        <TextBlock
                            Grid.Row="4"
                            Grid.Column="6"
                            Text="%" />
                        <StackPanel
                            Grid.Row="5"
                            Grid.ColumnSpan="{x:Static sys:Int32.MaxValue}"
                            Margin="0,10"
                            Orientation="Horizontal">
                            <TextBlock
                                Margin="0,0,10,0"
                                VerticalAlignment="Center"
                                Text="{x:Static properties:Resources.KindOfImage}" />
                            <ComboBox
                                x:Name="PART_ImageKind"
                                Width="80"
                                ItemsSource="{Binding Source={x:Static viewmodels:ImageSettingsViewModel.ImageKinds}, Mode=OneTime}"
                                SelectedItem="{Binding ImageKind}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={mvvm:EnumDescriptionConverter}}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>
                        <CheckBox
                            x:Name="PART_IsSideCutMode"
                            Grid.Row="6"
                            Grid.ColumnSpan="{x:Static sys:Int32.MaxValue}"
                            Content="{x:Static properties:Resources.SideCutMode}"
                            IsChecked="{Binding IsSideCutMode}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>